#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4025156105647969873) {
   out_4025156105647969873[0] = 0;
   out_4025156105647969873[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4025156105647969873[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4025156105647969873[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4025156105647969873[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4025156105647969873[5] = -sin(in_vec[1]);
   out_4025156105647969873[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4025156105647969873[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4025156105647969873[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4025156105647969873[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4025156105647969873[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4025156105647969873[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4025156105647969873[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4025156105647969873[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4025156105647969873[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4025156105647969873[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4025156105647969873[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4025156105647969873[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4971862151210719925) {
   out_4971862151210719925[0] = delta_x[0] + nom_x[0];
   out_4971862151210719925[1] = delta_x[1] + nom_x[1];
   out_4971862151210719925[2] = delta_x[2] + nom_x[2];
   out_4971862151210719925[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4971862151210719925[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4971862151210719925[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4971862151210719925[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4971862151210719925[7] = delta_x[6] + nom_x[7];
   out_4971862151210719925[8] = delta_x[7] + nom_x[8];
   out_4971862151210719925[9] = delta_x[8] + nom_x[9];
   out_4971862151210719925[10] = delta_x[9] + nom_x[10];
   out_4971862151210719925[11] = delta_x[10] + nom_x[11];
   out_4971862151210719925[12] = delta_x[11] + nom_x[12];
   out_4971862151210719925[13] = delta_x[12] + nom_x[13];
   out_4971862151210719925[14] = delta_x[13] + nom_x[14];
   out_4971862151210719925[15] = delta_x[14] + nom_x[15];
   out_4971862151210719925[16] = delta_x[15] + nom_x[16];
   out_4971862151210719925[17] = delta_x[16] + nom_x[17];
   out_4971862151210719925[18] = delta_x[17] + nom_x[18];
   out_4971862151210719925[19] = delta_x[18] + nom_x[19];
   out_4971862151210719925[20] = delta_x[19] + nom_x[20];
   out_4971862151210719925[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1175449850909647023) {
   out_1175449850909647023[0] = -nom_x[0] + true_x[0];
   out_1175449850909647023[1] = -nom_x[1] + true_x[1];
   out_1175449850909647023[2] = -nom_x[2] + true_x[2];
   out_1175449850909647023[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1175449850909647023[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1175449850909647023[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1175449850909647023[6] = -nom_x[7] + true_x[7];
   out_1175449850909647023[7] = -nom_x[8] + true_x[8];
   out_1175449850909647023[8] = -nom_x[9] + true_x[9];
   out_1175449850909647023[9] = -nom_x[10] + true_x[10];
   out_1175449850909647023[10] = -nom_x[11] + true_x[11];
   out_1175449850909647023[11] = -nom_x[12] + true_x[12];
   out_1175449850909647023[12] = -nom_x[13] + true_x[13];
   out_1175449850909647023[13] = -nom_x[14] + true_x[14];
   out_1175449850909647023[14] = -nom_x[15] + true_x[15];
   out_1175449850909647023[15] = -nom_x[16] + true_x[16];
   out_1175449850909647023[16] = -nom_x[17] + true_x[17];
   out_1175449850909647023[17] = -nom_x[18] + true_x[18];
   out_1175449850909647023[18] = -nom_x[19] + true_x[19];
   out_1175449850909647023[19] = -nom_x[20] + true_x[20];
   out_1175449850909647023[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2742273176947733560) {
   out_2742273176947733560[0] = 1.0;
   out_2742273176947733560[1] = 0.0;
   out_2742273176947733560[2] = 0.0;
   out_2742273176947733560[3] = 0.0;
   out_2742273176947733560[4] = 0.0;
   out_2742273176947733560[5] = 0.0;
   out_2742273176947733560[6] = 0.0;
   out_2742273176947733560[7] = 0.0;
   out_2742273176947733560[8] = 0.0;
   out_2742273176947733560[9] = 0.0;
   out_2742273176947733560[10] = 0.0;
   out_2742273176947733560[11] = 0.0;
   out_2742273176947733560[12] = 0.0;
   out_2742273176947733560[13] = 0.0;
   out_2742273176947733560[14] = 0.0;
   out_2742273176947733560[15] = 0.0;
   out_2742273176947733560[16] = 0.0;
   out_2742273176947733560[17] = 0.0;
   out_2742273176947733560[18] = 0.0;
   out_2742273176947733560[19] = 0.0;
   out_2742273176947733560[20] = 0.0;
   out_2742273176947733560[21] = 0.0;
   out_2742273176947733560[22] = 1.0;
   out_2742273176947733560[23] = 0.0;
   out_2742273176947733560[24] = 0.0;
   out_2742273176947733560[25] = 0.0;
   out_2742273176947733560[26] = 0.0;
   out_2742273176947733560[27] = 0.0;
   out_2742273176947733560[28] = 0.0;
   out_2742273176947733560[29] = 0.0;
   out_2742273176947733560[30] = 0.0;
   out_2742273176947733560[31] = 0.0;
   out_2742273176947733560[32] = 0.0;
   out_2742273176947733560[33] = 0.0;
   out_2742273176947733560[34] = 0.0;
   out_2742273176947733560[35] = 0.0;
   out_2742273176947733560[36] = 0.0;
   out_2742273176947733560[37] = 0.0;
   out_2742273176947733560[38] = 0.0;
   out_2742273176947733560[39] = 0.0;
   out_2742273176947733560[40] = 0.0;
   out_2742273176947733560[41] = 0.0;
   out_2742273176947733560[42] = 0.0;
   out_2742273176947733560[43] = 0.0;
   out_2742273176947733560[44] = 1.0;
   out_2742273176947733560[45] = 0.0;
   out_2742273176947733560[46] = 0.0;
   out_2742273176947733560[47] = 0.0;
   out_2742273176947733560[48] = 0.0;
   out_2742273176947733560[49] = 0.0;
   out_2742273176947733560[50] = 0.0;
   out_2742273176947733560[51] = 0.0;
   out_2742273176947733560[52] = 0.0;
   out_2742273176947733560[53] = 0.0;
   out_2742273176947733560[54] = 0.0;
   out_2742273176947733560[55] = 0.0;
   out_2742273176947733560[56] = 0.0;
   out_2742273176947733560[57] = 0.0;
   out_2742273176947733560[58] = 0.0;
   out_2742273176947733560[59] = 0.0;
   out_2742273176947733560[60] = 0.0;
   out_2742273176947733560[61] = 0.0;
   out_2742273176947733560[62] = 0.0;
   out_2742273176947733560[63] = 0.0;
   out_2742273176947733560[64] = 0.0;
   out_2742273176947733560[65] = 0.0;
   out_2742273176947733560[66] = -0.5*state[4];
   out_2742273176947733560[67] = -0.5*state[5];
   out_2742273176947733560[68] = -0.5*state[6];
   out_2742273176947733560[69] = 0.0;
   out_2742273176947733560[70] = 0.0;
   out_2742273176947733560[71] = 0.0;
   out_2742273176947733560[72] = 0.0;
   out_2742273176947733560[73] = 0.0;
   out_2742273176947733560[74] = 0.0;
   out_2742273176947733560[75] = 0.0;
   out_2742273176947733560[76] = 0.0;
   out_2742273176947733560[77] = 0.0;
   out_2742273176947733560[78] = 0.0;
   out_2742273176947733560[79] = 0.0;
   out_2742273176947733560[80] = 0.0;
   out_2742273176947733560[81] = 0.0;
   out_2742273176947733560[82] = 0.0;
   out_2742273176947733560[83] = 0.0;
   out_2742273176947733560[84] = 0.0;
   out_2742273176947733560[85] = 0.0;
   out_2742273176947733560[86] = 0.0;
   out_2742273176947733560[87] = 0.5*state[3];
   out_2742273176947733560[88] = 0.5*state[6];
   out_2742273176947733560[89] = -0.5*state[5];
   out_2742273176947733560[90] = 0.0;
   out_2742273176947733560[91] = 0.0;
   out_2742273176947733560[92] = 0.0;
   out_2742273176947733560[93] = 0.0;
   out_2742273176947733560[94] = 0.0;
   out_2742273176947733560[95] = 0.0;
   out_2742273176947733560[96] = 0.0;
   out_2742273176947733560[97] = 0.0;
   out_2742273176947733560[98] = 0.0;
   out_2742273176947733560[99] = 0.0;
   out_2742273176947733560[100] = 0.0;
   out_2742273176947733560[101] = 0.0;
   out_2742273176947733560[102] = 0.0;
   out_2742273176947733560[103] = 0.0;
   out_2742273176947733560[104] = 0.0;
   out_2742273176947733560[105] = 0.0;
   out_2742273176947733560[106] = 0.0;
   out_2742273176947733560[107] = 0.0;
   out_2742273176947733560[108] = -0.5*state[6];
   out_2742273176947733560[109] = 0.5*state[3];
   out_2742273176947733560[110] = 0.5*state[4];
   out_2742273176947733560[111] = 0.0;
   out_2742273176947733560[112] = 0.0;
   out_2742273176947733560[113] = 0.0;
   out_2742273176947733560[114] = 0.0;
   out_2742273176947733560[115] = 0.0;
   out_2742273176947733560[116] = 0.0;
   out_2742273176947733560[117] = 0.0;
   out_2742273176947733560[118] = 0.0;
   out_2742273176947733560[119] = 0.0;
   out_2742273176947733560[120] = 0.0;
   out_2742273176947733560[121] = 0.0;
   out_2742273176947733560[122] = 0.0;
   out_2742273176947733560[123] = 0.0;
   out_2742273176947733560[124] = 0.0;
   out_2742273176947733560[125] = 0.0;
   out_2742273176947733560[126] = 0.0;
   out_2742273176947733560[127] = 0.0;
   out_2742273176947733560[128] = 0.0;
   out_2742273176947733560[129] = 0.5*state[5];
   out_2742273176947733560[130] = -0.5*state[4];
   out_2742273176947733560[131] = 0.5*state[3];
   out_2742273176947733560[132] = 0.0;
   out_2742273176947733560[133] = 0.0;
   out_2742273176947733560[134] = 0.0;
   out_2742273176947733560[135] = 0.0;
   out_2742273176947733560[136] = 0.0;
   out_2742273176947733560[137] = 0.0;
   out_2742273176947733560[138] = 0.0;
   out_2742273176947733560[139] = 0.0;
   out_2742273176947733560[140] = 0.0;
   out_2742273176947733560[141] = 0.0;
   out_2742273176947733560[142] = 0.0;
   out_2742273176947733560[143] = 0.0;
   out_2742273176947733560[144] = 0.0;
   out_2742273176947733560[145] = 0.0;
   out_2742273176947733560[146] = 0.0;
   out_2742273176947733560[147] = 0.0;
   out_2742273176947733560[148] = 0.0;
   out_2742273176947733560[149] = 0.0;
   out_2742273176947733560[150] = 0.0;
   out_2742273176947733560[151] = 0.0;
   out_2742273176947733560[152] = 0.0;
   out_2742273176947733560[153] = 1.0;
   out_2742273176947733560[154] = 0.0;
   out_2742273176947733560[155] = 0.0;
   out_2742273176947733560[156] = 0.0;
   out_2742273176947733560[157] = 0.0;
   out_2742273176947733560[158] = 0.0;
   out_2742273176947733560[159] = 0.0;
   out_2742273176947733560[160] = 0.0;
   out_2742273176947733560[161] = 0.0;
   out_2742273176947733560[162] = 0.0;
   out_2742273176947733560[163] = 0.0;
   out_2742273176947733560[164] = 0.0;
   out_2742273176947733560[165] = 0.0;
   out_2742273176947733560[166] = 0.0;
   out_2742273176947733560[167] = 0.0;
   out_2742273176947733560[168] = 0.0;
   out_2742273176947733560[169] = 0.0;
   out_2742273176947733560[170] = 0.0;
   out_2742273176947733560[171] = 0.0;
   out_2742273176947733560[172] = 0.0;
   out_2742273176947733560[173] = 0.0;
   out_2742273176947733560[174] = 0.0;
   out_2742273176947733560[175] = 1.0;
   out_2742273176947733560[176] = 0.0;
   out_2742273176947733560[177] = 0.0;
   out_2742273176947733560[178] = 0.0;
   out_2742273176947733560[179] = 0.0;
   out_2742273176947733560[180] = 0.0;
   out_2742273176947733560[181] = 0.0;
   out_2742273176947733560[182] = 0.0;
   out_2742273176947733560[183] = 0.0;
   out_2742273176947733560[184] = 0.0;
   out_2742273176947733560[185] = 0.0;
   out_2742273176947733560[186] = 0.0;
   out_2742273176947733560[187] = 0.0;
   out_2742273176947733560[188] = 0.0;
   out_2742273176947733560[189] = 0.0;
   out_2742273176947733560[190] = 0.0;
   out_2742273176947733560[191] = 0.0;
   out_2742273176947733560[192] = 0.0;
   out_2742273176947733560[193] = 0.0;
   out_2742273176947733560[194] = 0.0;
   out_2742273176947733560[195] = 0.0;
   out_2742273176947733560[196] = 0.0;
   out_2742273176947733560[197] = 1.0;
   out_2742273176947733560[198] = 0.0;
   out_2742273176947733560[199] = 0.0;
   out_2742273176947733560[200] = 0.0;
   out_2742273176947733560[201] = 0.0;
   out_2742273176947733560[202] = 0.0;
   out_2742273176947733560[203] = 0.0;
   out_2742273176947733560[204] = 0.0;
   out_2742273176947733560[205] = 0.0;
   out_2742273176947733560[206] = 0.0;
   out_2742273176947733560[207] = 0.0;
   out_2742273176947733560[208] = 0.0;
   out_2742273176947733560[209] = 0.0;
   out_2742273176947733560[210] = 0.0;
   out_2742273176947733560[211] = 0.0;
   out_2742273176947733560[212] = 0.0;
   out_2742273176947733560[213] = 0.0;
   out_2742273176947733560[214] = 0.0;
   out_2742273176947733560[215] = 0.0;
   out_2742273176947733560[216] = 0.0;
   out_2742273176947733560[217] = 0.0;
   out_2742273176947733560[218] = 0.0;
   out_2742273176947733560[219] = 1.0;
   out_2742273176947733560[220] = 0.0;
   out_2742273176947733560[221] = 0.0;
   out_2742273176947733560[222] = 0.0;
   out_2742273176947733560[223] = 0.0;
   out_2742273176947733560[224] = 0.0;
   out_2742273176947733560[225] = 0.0;
   out_2742273176947733560[226] = 0.0;
   out_2742273176947733560[227] = 0.0;
   out_2742273176947733560[228] = 0.0;
   out_2742273176947733560[229] = 0.0;
   out_2742273176947733560[230] = 0.0;
   out_2742273176947733560[231] = 0.0;
   out_2742273176947733560[232] = 0.0;
   out_2742273176947733560[233] = 0.0;
   out_2742273176947733560[234] = 0.0;
   out_2742273176947733560[235] = 0.0;
   out_2742273176947733560[236] = 0.0;
   out_2742273176947733560[237] = 0.0;
   out_2742273176947733560[238] = 0.0;
   out_2742273176947733560[239] = 0.0;
   out_2742273176947733560[240] = 0.0;
   out_2742273176947733560[241] = 1.0;
   out_2742273176947733560[242] = 0.0;
   out_2742273176947733560[243] = 0.0;
   out_2742273176947733560[244] = 0.0;
   out_2742273176947733560[245] = 0.0;
   out_2742273176947733560[246] = 0.0;
   out_2742273176947733560[247] = 0.0;
   out_2742273176947733560[248] = 0.0;
   out_2742273176947733560[249] = 0.0;
   out_2742273176947733560[250] = 0.0;
   out_2742273176947733560[251] = 0.0;
   out_2742273176947733560[252] = 0.0;
   out_2742273176947733560[253] = 0.0;
   out_2742273176947733560[254] = 0.0;
   out_2742273176947733560[255] = 0.0;
   out_2742273176947733560[256] = 0.0;
   out_2742273176947733560[257] = 0.0;
   out_2742273176947733560[258] = 0.0;
   out_2742273176947733560[259] = 0.0;
   out_2742273176947733560[260] = 0.0;
   out_2742273176947733560[261] = 0.0;
   out_2742273176947733560[262] = 0.0;
   out_2742273176947733560[263] = 1.0;
   out_2742273176947733560[264] = 0.0;
   out_2742273176947733560[265] = 0.0;
   out_2742273176947733560[266] = 0.0;
   out_2742273176947733560[267] = 0.0;
   out_2742273176947733560[268] = 0.0;
   out_2742273176947733560[269] = 0.0;
   out_2742273176947733560[270] = 0.0;
   out_2742273176947733560[271] = 0.0;
   out_2742273176947733560[272] = 0.0;
   out_2742273176947733560[273] = 0.0;
   out_2742273176947733560[274] = 0.0;
   out_2742273176947733560[275] = 0.0;
   out_2742273176947733560[276] = 0.0;
   out_2742273176947733560[277] = 0.0;
   out_2742273176947733560[278] = 0.0;
   out_2742273176947733560[279] = 0.0;
   out_2742273176947733560[280] = 0.0;
   out_2742273176947733560[281] = 0.0;
   out_2742273176947733560[282] = 0.0;
   out_2742273176947733560[283] = 0.0;
   out_2742273176947733560[284] = 0.0;
   out_2742273176947733560[285] = 1.0;
   out_2742273176947733560[286] = 0.0;
   out_2742273176947733560[287] = 0.0;
   out_2742273176947733560[288] = 0.0;
   out_2742273176947733560[289] = 0.0;
   out_2742273176947733560[290] = 0.0;
   out_2742273176947733560[291] = 0.0;
   out_2742273176947733560[292] = 0.0;
   out_2742273176947733560[293] = 0.0;
   out_2742273176947733560[294] = 0.0;
   out_2742273176947733560[295] = 0.0;
   out_2742273176947733560[296] = 0.0;
   out_2742273176947733560[297] = 0.0;
   out_2742273176947733560[298] = 0.0;
   out_2742273176947733560[299] = 0.0;
   out_2742273176947733560[300] = 0.0;
   out_2742273176947733560[301] = 0.0;
   out_2742273176947733560[302] = 0.0;
   out_2742273176947733560[303] = 0.0;
   out_2742273176947733560[304] = 0.0;
   out_2742273176947733560[305] = 0.0;
   out_2742273176947733560[306] = 0.0;
   out_2742273176947733560[307] = 1.0;
   out_2742273176947733560[308] = 0.0;
   out_2742273176947733560[309] = 0.0;
   out_2742273176947733560[310] = 0.0;
   out_2742273176947733560[311] = 0.0;
   out_2742273176947733560[312] = 0.0;
   out_2742273176947733560[313] = 0.0;
   out_2742273176947733560[314] = 0.0;
   out_2742273176947733560[315] = 0.0;
   out_2742273176947733560[316] = 0.0;
   out_2742273176947733560[317] = 0.0;
   out_2742273176947733560[318] = 0.0;
   out_2742273176947733560[319] = 0.0;
   out_2742273176947733560[320] = 0.0;
   out_2742273176947733560[321] = 0.0;
   out_2742273176947733560[322] = 0.0;
   out_2742273176947733560[323] = 0.0;
   out_2742273176947733560[324] = 0.0;
   out_2742273176947733560[325] = 0.0;
   out_2742273176947733560[326] = 0.0;
   out_2742273176947733560[327] = 0.0;
   out_2742273176947733560[328] = 0.0;
   out_2742273176947733560[329] = 1.0;
   out_2742273176947733560[330] = 0.0;
   out_2742273176947733560[331] = 0.0;
   out_2742273176947733560[332] = 0.0;
   out_2742273176947733560[333] = 0.0;
   out_2742273176947733560[334] = 0.0;
   out_2742273176947733560[335] = 0.0;
   out_2742273176947733560[336] = 0.0;
   out_2742273176947733560[337] = 0.0;
   out_2742273176947733560[338] = 0.0;
   out_2742273176947733560[339] = 0.0;
   out_2742273176947733560[340] = 0.0;
   out_2742273176947733560[341] = 0.0;
   out_2742273176947733560[342] = 0.0;
   out_2742273176947733560[343] = 0.0;
   out_2742273176947733560[344] = 0.0;
   out_2742273176947733560[345] = 0.0;
   out_2742273176947733560[346] = 0.0;
   out_2742273176947733560[347] = 0.0;
   out_2742273176947733560[348] = 0.0;
   out_2742273176947733560[349] = 0.0;
   out_2742273176947733560[350] = 0.0;
   out_2742273176947733560[351] = 1.0;
   out_2742273176947733560[352] = 0.0;
   out_2742273176947733560[353] = 0.0;
   out_2742273176947733560[354] = 0.0;
   out_2742273176947733560[355] = 0.0;
   out_2742273176947733560[356] = 0.0;
   out_2742273176947733560[357] = 0.0;
   out_2742273176947733560[358] = 0.0;
   out_2742273176947733560[359] = 0.0;
   out_2742273176947733560[360] = 0.0;
   out_2742273176947733560[361] = 0.0;
   out_2742273176947733560[362] = 0.0;
   out_2742273176947733560[363] = 0.0;
   out_2742273176947733560[364] = 0.0;
   out_2742273176947733560[365] = 0.0;
   out_2742273176947733560[366] = 0.0;
   out_2742273176947733560[367] = 0.0;
   out_2742273176947733560[368] = 0.0;
   out_2742273176947733560[369] = 0.0;
   out_2742273176947733560[370] = 0.0;
   out_2742273176947733560[371] = 0.0;
   out_2742273176947733560[372] = 0.0;
   out_2742273176947733560[373] = 1.0;
   out_2742273176947733560[374] = 0.0;
   out_2742273176947733560[375] = 0.0;
   out_2742273176947733560[376] = 0.0;
   out_2742273176947733560[377] = 0.0;
   out_2742273176947733560[378] = 0.0;
   out_2742273176947733560[379] = 0.0;
   out_2742273176947733560[380] = 0.0;
   out_2742273176947733560[381] = 0.0;
   out_2742273176947733560[382] = 0.0;
   out_2742273176947733560[383] = 0.0;
   out_2742273176947733560[384] = 0.0;
   out_2742273176947733560[385] = 0.0;
   out_2742273176947733560[386] = 0.0;
   out_2742273176947733560[387] = 0.0;
   out_2742273176947733560[388] = 0.0;
   out_2742273176947733560[389] = 0.0;
   out_2742273176947733560[390] = 0.0;
   out_2742273176947733560[391] = 0.0;
   out_2742273176947733560[392] = 0.0;
   out_2742273176947733560[393] = 0.0;
   out_2742273176947733560[394] = 0.0;
   out_2742273176947733560[395] = 1.0;
   out_2742273176947733560[396] = 0.0;
   out_2742273176947733560[397] = 0.0;
   out_2742273176947733560[398] = 0.0;
   out_2742273176947733560[399] = 0.0;
   out_2742273176947733560[400] = 0.0;
   out_2742273176947733560[401] = 0.0;
   out_2742273176947733560[402] = 0.0;
   out_2742273176947733560[403] = 0.0;
   out_2742273176947733560[404] = 0.0;
   out_2742273176947733560[405] = 0.0;
   out_2742273176947733560[406] = 0.0;
   out_2742273176947733560[407] = 0.0;
   out_2742273176947733560[408] = 0.0;
   out_2742273176947733560[409] = 0.0;
   out_2742273176947733560[410] = 0.0;
   out_2742273176947733560[411] = 0.0;
   out_2742273176947733560[412] = 0.0;
   out_2742273176947733560[413] = 0.0;
   out_2742273176947733560[414] = 0.0;
   out_2742273176947733560[415] = 0.0;
   out_2742273176947733560[416] = 0.0;
   out_2742273176947733560[417] = 1.0;
   out_2742273176947733560[418] = 0.0;
   out_2742273176947733560[419] = 0.0;
   out_2742273176947733560[420] = 0.0;
   out_2742273176947733560[421] = 0.0;
   out_2742273176947733560[422] = 0.0;
   out_2742273176947733560[423] = 0.0;
   out_2742273176947733560[424] = 0.0;
   out_2742273176947733560[425] = 0.0;
   out_2742273176947733560[426] = 0.0;
   out_2742273176947733560[427] = 0.0;
   out_2742273176947733560[428] = 0.0;
   out_2742273176947733560[429] = 0.0;
   out_2742273176947733560[430] = 0.0;
   out_2742273176947733560[431] = 0.0;
   out_2742273176947733560[432] = 0.0;
   out_2742273176947733560[433] = 0.0;
   out_2742273176947733560[434] = 0.0;
   out_2742273176947733560[435] = 0.0;
   out_2742273176947733560[436] = 0.0;
   out_2742273176947733560[437] = 0.0;
   out_2742273176947733560[438] = 0.0;
   out_2742273176947733560[439] = 1.0;
   out_2742273176947733560[440] = 0.0;
   out_2742273176947733560[441] = 0.0;
   out_2742273176947733560[442] = 0.0;
   out_2742273176947733560[443] = 0.0;
   out_2742273176947733560[444] = 0.0;
   out_2742273176947733560[445] = 0.0;
   out_2742273176947733560[446] = 0.0;
   out_2742273176947733560[447] = 0.0;
   out_2742273176947733560[448] = 0.0;
   out_2742273176947733560[449] = 0.0;
   out_2742273176947733560[450] = 0.0;
   out_2742273176947733560[451] = 0.0;
   out_2742273176947733560[452] = 0.0;
   out_2742273176947733560[453] = 0.0;
   out_2742273176947733560[454] = 0.0;
   out_2742273176947733560[455] = 0.0;
   out_2742273176947733560[456] = 0.0;
   out_2742273176947733560[457] = 0.0;
   out_2742273176947733560[458] = 0.0;
   out_2742273176947733560[459] = 0.0;
   out_2742273176947733560[460] = 0.0;
   out_2742273176947733560[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_334090933826292600) {
   out_334090933826292600[0] = dt*state[7] + state[0];
   out_334090933826292600[1] = dt*state[8] + state[1];
   out_334090933826292600[2] = dt*state[9] + state[2];
   out_334090933826292600[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_334090933826292600[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_334090933826292600[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_334090933826292600[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_334090933826292600[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_334090933826292600[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_334090933826292600[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_334090933826292600[10] = state[10];
   out_334090933826292600[11] = state[11];
   out_334090933826292600[12] = state[12];
   out_334090933826292600[13] = state[13];
   out_334090933826292600[14] = state[14];
   out_334090933826292600[15] = state[15];
   out_334090933826292600[16] = state[16];
   out_334090933826292600[17] = state[17];
   out_334090933826292600[18] = state[18];
   out_334090933826292600[19] = state[19];
   out_334090933826292600[20] = state[20];
   out_334090933826292600[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3110784210182139823) {
   out_3110784210182139823[0] = 1;
   out_3110784210182139823[1] = 0;
   out_3110784210182139823[2] = 0;
   out_3110784210182139823[3] = 0;
   out_3110784210182139823[4] = 0;
   out_3110784210182139823[5] = 0;
   out_3110784210182139823[6] = dt;
   out_3110784210182139823[7] = 0;
   out_3110784210182139823[8] = 0;
   out_3110784210182139823[9] = 0;
   out_3110784210182139823[10] = 0;
   out_3110784210182139823[11] = 0;
   out_3110784210182139823[12] = 0;
   out_3110784210182139823[13] = 0;
   out_3110784210182139823[14] = 0;
   out_3110784210182139823[15] = 0;
   out_3110784210182139823[16] = 0;
   out_3110784210182139823[17] = 0;
   out_3110784210182139823[18] = 0;
   out_3110784210182139823[19] = 0;
   out_3110784210182139823[20] = 0;
   out_3110784210182139823[21] = 0;
   out_3110784210182139823[22] = 1;
   out_3110784210182139823[23] = 0;
   out_3110784210182139823[24] = 0;
   out_3110784210182139823[25] = 0;
   out_3110784210182139823[26] = 0;
   out_3110784210182139823[27] = 0;
   out_3110784210182139823[28] = dt;
   out_3110784210182139823[29] = 0;
   out_3110784210182139823[30] = 0;
   out_3110784210182139823[31] = 0;
   out_3110784210182139823[32] = 0;
   out_3110784210182139823[33] = 0;
   out_3110784210182139823[34] = 0;
   out_3110784210182139823[35] = 0;
   out_3110784210182139823[36] = 0;
   out_3110784210182139823[37] = 0;
   out_3110784210182139823[38] = 0;
   out_3110784210182139823[39] = 0;
   out_3110784210182139823[40] = 0;
   out_3110784210182139823[41] = 0;
   out_3110784210182139823[42] = 0;
   out_3110784210182139823[43] = 0;
   out_3110784210182139823[44] = 1;
   out_3110784210182139823[45] = 0;
   out_3110784210182139823[46] = 0;
   out_3110784210182139823[47] = 0;
   out_3110784210182139823[48] = 0;
   out_3110784210182139823[49] = 0;
   out_3110784210182139823[50] = dt;
   out_3110784210182139823[51] = 0;
   out_3110784210182139823[52] = 0;
   out_3110784210182139823[53] = 0;
   out_3110784210182139823[54] = 0;
   out_3110784210182139823[55] = 0;
   out_3110784210182139823[56] = 0;
   out_3110784210182139823[57] = 0;
   out_3110784210182139823[58] = 0;
   out_3110784210182139823[59] = 0;
   out_3110784210182139823[60] = 0;
   out_3110784210182139823[61] = 0;
   out_3110784210182139823[62] = 0;
   out_3110784210182139823[63] = 0;
   out_3110784210182139823[64] = 0;
   out_3110784210182139823[65] = 0;
   out_3110784210182139823[66] = 1;
   out_3110784210182139823[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3110784210182139823[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3110784210182139823[69] = 0;
   out_3110784210182139823[70] = 0;
   out_3110784210182139823[71] = 0;
   out_3110784210182139823[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3110784210182139823[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3110784210182139823[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3110784210182139823[75] = 0;
   out_3110784210182139823[76] = 0;
   out_3110784210182139823[77] = 0;
   out_3110784210182139823[78] = 0;
   out_3110784210182139823[79] = 0;
   out_3110784210182139823[80] = 0;
   out_3110784210182139823[81] = 0;
   out_3110784210182139823[82] = 0;
   out_3110784210182139823[83] = 0;
   out_3110784210182139823[84] = 0;
   out_3110784210182139823[85] = 0;
   out_3110784210182139823[86] = 0;
   out_3110784210182139823[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3110784210182139823[88] = 1;
   out_3110784210182139823[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3110784210182139823[90] = 0;
   out_3110784210182139823[91] = 0;
   out_3110784210182139823[92] = 0;
   out_3110784210182139823[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3110784210182139823[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3110784210182139823[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3110784210182139823[96] = 0;
   out_3110784210182139823[97] = 0;
   out_3110784210182139823[98] = 0;
   out_3110784210182139823[99] = 0;
   out_3110784210182139823[100] = 0;
   out_3110784210182139823[101] = 0;
   out_3110784210182139823[102] = 0;
   out_3110784210182139823[103] = 0;
   out_3110784210182139823[104] = 0;
   out_3110784210182139823[105] = 0;
   out_3110784210182139823[106] = 0;
   out_3110784210182139823[107] = 0;
   out_3110784210182139823[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3110784210182139823[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3110784210182139823[110] = 1;
   out_3110784210182139823[111] = 0;
   out_3110784210182139823[112] = 0;
   out_3110784210182139823[113] = 0;
   out_3110784210182139823[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3110784210182139823[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3110784210182139823[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3110784210182139823[117] = 0;
   out_3110784210182139823[118] = 0;
   out_3110784210182139823[119] = 0;
   out_3110784210182139823[120] = 0;
   out_3110784210182139823[121] = 0;
   out_3110784210182139823[122] = 0;
   out_3110784210182139823[123] = 0;
   out_3110784210182139823[124] = 0;
   out_3110784210182139823[125] = 0;
   out_3110784210182139823[126] = 0;
   out_3110784210182139823[127] = 0;
   out_3110784210182139823[128] = 0;
   out_3110784210182139823[129] = 0;
   out_3110784210182139823[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3110784210182139823[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3110784210182139823[132] = 1;
   out_3110784210182139823[133] = 0;
   out_3110784210182139823[134] = 0;
   out_3110784210182139823[135] = 0;
   out_3110784210182139823[136] = 0;
   out_3110784210182139823[137] = 0;
   out_3110784210182139823[138] = 0;
   out_3110784210182139823[139] = 0;
   out_3110784210182139823[140] = 0;
   out_3110784210182139823[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3110784210182139823[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3110784210182139823[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3110784210182139823[144] = 0;
   out_3110784210182139823[145] = 0;
   out_3110784210182139823[146] = 0;
   out_3110784210182139823[147] = 0;
   out_3110784210182139823[148] = 0;
   out_3110784210182139823[149] = 0;
   out_3110784210182139823[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3110784210182139823[151] = 0;
   out_3110784210182139823[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3110784210182139823[153] = 0;
   out_3110784210182139823[154] = 1;
   out_3110784210182139823[155] = 0;
   out_3110784210182139823[156] = 0;
   out_3110784210182139823[157] = 0;
   out_3110784210182139823[158] = 0;
   out_3110784210182139823[159] = 0;
   out_3110784210182139823[160] = 0;
   out_3110784210182139823[161] = 0;
   out_3110784210182139823[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3110784210182139823[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3110784210182139823[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3110784210182139823[165] = 0;
   out_3110784210182139823[166] = 0;
   out_3110784210182139823[167] = 0;
   out_3110784210182139823[168] = 0;
   out_3110784210182139823[169] = 0;
   out_3110784210182139823[170] = 0;
   out_3110784210182139823[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3110784210182139823[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3110784210182139823[173] = 0;
   out_3110784210182139823[174] = 0;
   out_3110784210182139823[175] = 0;
   out_3110784210182139823[176] = 1;
   out_3110784210182139823[177] = 0;
   out_3110784210182139823[178] = 0;
   out_3110784210182139823[179] = 0;
   out_3110784210182139823[180] = 0;
   out_3110784210182139823[181] = 0;
   out_3110784210182139823[182] = 0;
   out_3110784210182139823[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3110784210182139823[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3110784210182139823[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3110784210182139823[186] = 0;
   out_3110784210182139823[187] = 0;
   out_3110784210182139823[188] = 0;
   out_3110784210182139823[189] = 0;
   out_3110784210182139823[190] = 0;
   out_3110784210182139823[191] = 0;
   out_3110784210182139823[192] = 0;
   out_3110784210182139823[193] = 0;
   out_3110784210182139823[194] = 0;
   out_3110784210182139823[195] = 0;
   out_3110784210182139823[196] = 0;
   out_3110784210182139823[197] = 0;
   out_3110784210182139823[198] = 1;
   out_3110784210182139823[199] = 0;
   out_3110784210182139823[200] = 0;
   out_3110784210182139823[201] = 0;
   out_3110784210182139823[202] = 0;
   out_3110784210182139823[203] = 0;
   out_3110784210182139823[204] = 0;
   out_3110784210182139823[205] = 0;
   out_3110784210182139823[206] = 0;
   out_3110784210182139823[207] = 0;
   out_3110784210182139823[208] = 0;
   out_3110784210182139823[209] = 0;
   out_3110784210182139823[210] = 0;
   out_3110784210182139823[211] = 0;
   out_3110784210182139823[212] = 0;
   out_3110784210182139823[213] = 0;
   out_3110784210182139823[214] = 0;
   out_3110784210182139823[215] = 0;
   out_3110784210182139823[216] = 0;
   out_3110784210182139823[217] = 0;
   out_3110784210182139823[218] = 0;
   out_3110784210182139823[219] = 0;
   out_3110784210182139823[220] = 1;
   out_3110784210182139823[221] = 0;
   out_3110784210182139823[222] = 0;
   out_3110784210182139823[223] = 0;
   out_3110784210182139823[224] = 0;
   out_3110784210182139823[225] = 0;
   out_3110784210182139823[226] = 0;
   out_3110784210182139823[227] = 0;
   out_3110784210182139823[228] = 0;
   out_3110784210182139823[229] = 0;
   out_3110784210182139823[230] = 0;
   out_3110784210182139823[231] = 0;
   out_3110784210182139823[232] = 0;
   out_3110784210182139823[233] = 0;
   out_3110784210182139823[234] = 0;
   out_3110784210182139823[235] = 0;
   out_3110784210182139823[236] = 0;
   out_3110784210182139823[237] = 0;
   out_3110784210182139823[238] = 0;
   out_3110784210182139823[239] = 0;
   out_3110784210182139823[240] = 0;
   out_3110784210182139823[241] = 0;
   out_3110784210182139823[242] = 1;
   out_3110784210182139823[243] = 0;
   out_3110784210182139823[244] = 0;
   out_3110784210182139823[245] = 0;
   out_3110784210182139823[246] = 0;
   out_3110784210182139823[247] = 0;
   out_3110784210182139823[248] = 0;
   out_3110784210182139823[249] = 0;
   out_3110784210182139823[250] = 0;
   out_3110784210182139823[251] = 0;
   out_3110784210182139823[252] = 0;
   out_3110784210182139823[253] = 0;
   out_3110784210182139823[254] = 0;
   out_3110784210182139823[255] = 0;
   out_3110784210182139823[256] = 0;
   out_3110784210182139823[257] = 0;
   out_3110784210182139823[258] = 0;
   out_3110784210182139823[259] = 0;
   out_3110784210182139823[260] = 0;
   out_3110784210182139823[261] = 0;
   out_3110784210182139823[262] = 0;
   out_3110784210182139823[263] = 0;
   out_3110784210182139823[264] = 1;
   out_3110784210182139823[265] = 0;
   out_3110784210182139823[266] = 0;
   out_3110784210182139823[267] = 0;
   out_3110784210182139823[268] = 0;
   out_3110784210182139823[269] = 0;
   out_3110784210182139823[270] = 0;
   out_3110784210182139823[271] = 0;
   out_3110784210182139823[272] = 0;
   out_3110784210182139823[273] = 0;
   out_3110784210182139823[274] = 0;
   out_3110784210182139823[275] = 0;
   out_3110784210182139823[276] = 0;
   out_3110784210182139823[277] = 0;
   out_3110784210182139823[278] = 0;
   out_3110784210182139823[279] = 0;
   out_3110784210182139823[280] = 0;
   out_3110784210182139823[281] = 0;
   out_3110784210182139823[282] = 0;
   out_3110784210182139823[283] = 0;
   out_3110784210182139823[284] = 0;
   out_3110784210182139823[285] = 0;
   out_3110784210182139823[286] = 1;
   out_3110784210182139823[287] = 0;
   out_3110784210182139823[288] = 0;
   out_3110784210182139823[289] = 0;
   out_3110784210182139823[290] = 0;
   out_3110784210182139823[291] = 0;
   out_3110784210182139823[292] = 0;
   out_3110784210182139823[293] = 0;
   out_3110784210182139823[294] = 0;
   out_3110784210182139823[295] = 0;
   out_3110784210182139823[296] = 0;
   out_3110784210182139823[297] = 0;
   out_3110784210182139823[298] = 0;
   out_3110784210182139823[299] = 0;
   out_3110784210182139823[300] = 0;
   out_3110784210182139823[301] = 0;
   out_3110784210182139823[302] = 0;
   out_3110784210182139823[303] = 0;
   out_3110784210182139823[304] = 0;
   out_3110784210182139823[305] = 0;
   out_3110784210182139823[306] = 0;
   out_3110784210182139823[307] = 0;
   out_3110784210182139823[308] = 1;
   out_3110784210182139823[309] = 0;
   out_3110784210182139823[310] = 0;
   out_3110784210182139823[311] = 0;
   out_3110784210182139823[312] = 0;
   out_3110784210182139823[313] = 0;
   out_3110784210182139823[314] = 0;
   out_3110784210182139823[315] = 0;
   out_3110784210182139823[316] = 0;
   out_3110784210182139823[317] = 0;
   out_3110784210182139823[318] = 0;
   out_3110784210182139823[319] = 0;
   out_3110784210182139823[320] = 0;
   out_3110784210182139823[321] = 0;
   out_3110784210182139823[322] = 0;
   out_3110784210182139823[323] = 0;
   out_3110784210182139823[324] = 0;
   out_3110784210182139823[325] = 0;
   out_3110784210182139823[326] = 0;
   out_3110784210182139823[327] = 0;
   out_3110784210182139823[328] = 0;
   out_3110784210182139823[329] = 0;
   out_3110784210182139823[330] = 1;
   out_3110784210182139823[331] = 0;
   out_3110784210182139823[332] = 0;
   out_3110784210182139823[333] = 0;
   out_3110784210182139823[334] = 0;
   out_3110784210182139823[335] = 0;
   out_3110784210182139823[336] = 0;
   out_3110784210182139823[337] = 0;
   out_3110784210182139823[338] = 0;
   out_3110784210182139823[339] = 0;
   out_3110784210182139823[340] = 0;
   out_3110784210182139823[341] = 0;
   out_3110784210182139823[342] = 0;
   out_3110784210182139823[343] = 0;
   out_3110784210182139823[344] = 0;
   out_3110784210182139823[345] = 0;
   out_3110784210182139823[346] = 0;
   out_3110784210182139823[347] = 0;
   out_3110784210182139823[348] = 0;
   out_3110784210182139823[349] = 0;
   out_3110784210182139823[350] = 0;
   out_3110784210182139823[351] = 0;
   out_3110784210182139823[352] = 1;
   out_3110784210182139823[353] = 0;
   out_3110784210182139823[354] = 0;
   out_3110784210182139823[355] = 0;
   out_3110784210182139823[356] = 0;
   out_3110784210182139823[357] = 0;
   out_3110784210182139823[358] = 0;
   out_3110784210182139823[359] = 0;
   out_3110784210182139823[360] = 0;
   out_3110784210182139823[361] = 0;
   out_3110784210182139823[362] = 0;
   out_3110784210182139823[363] = 0;
   out_3110784210182139823[364] = 0;
   out_3110784210182139823[365] = 0;
   out_3110784210182139823[366] = 0;
   out_3110784210182139823[367] = 0;
   out_3110784210182139823[368] = 0;
   out_3110784210182139823[369] = 0;
   out_3110784210182139823[370] = 0;
   out_3110784210182139823[371] = 0;
   out_3110784210182139823[372] = 0;
   out_3110784210182139823[373] = 0;
   out_3110784210182139823[374] = 1;
   out_3110784210182139823[375] = 0;
   out_3110784210182139823[376] = 0;
   out_3110784210182139823[377] = 0;
   out_3110784210182139823[378] = 0;
   out_3110784210182139823[379] = 0;
   out_3110784210182139823[380] = 0;
   out_3110784210182139823[381] = 0;
   out_3110784210182139823[382] = 0;
   out_3110784210182139823[383] = 0;
   out_3110784210182139823[384] = 0;
   out_3110784210182139823[385] = 0;
   out_3110784210182139823[386] = 0;
   out_3110784210182139823[387] = 0;
   out_3110784210182139823[388] = 0;
   out_3110784210182139823[389] = 0;
   out_3110784210182139823[390] = 0;
   out_3110784210182139823[391] = 0;
   out_3110784210182139823[392] = 0;
   out_3110784210182139823[393] = 0;
   out_3110784210182139823[394] = 0;
   out_3110784210182139823[395] = 0;
   out_3110784210182139823[396] = 1;
   out_3110784210182139823[397] = 0;
   out_3110784210182139823[398] = 0;
   out_3110784210182139823[399] = 0;
   out_3110784210182139823[400] = 0;
   out_3110784210182139823[401] = 0;
   out_3110784210182139823[402] = 0;
   out_3110784210182139823[403] = 0;
   out_3110784210182139823[404] = 0;
   out_3110784210182139823[405] = 0;
   out_3110784210182139823[406] = 0;
   out_3110784210182139823[407] = 0;
   out_3110784210182139823[408] = 0;
   out_3110784210182139823[409] = 0;
   out_3110784210182139823[410] = 0;
   out_3110784210182139823[411] = 0;
   out_3110784210182139823[412] = 0;
   out_3110784210182139823[413] = 0;
   out_3110784210182139823[414] = 0;
   out_3110784210182139823[415] = 0;
   out_3110784210182139823[416] = 0;
   out_3110784210182139823[417] = 0;
   out_3110784210182139823[418] = 1;
   out_3110784210182139823[419] = 0;
   out_3110784210182139823[420] = 0;
   out_3110784210182139823[421] = 0;
   out_3110784210182139823[422] = 0;
   out_3110784210182139823[423] = 0;
   out_3110784210182139823[424] = 0;
   out_3110784210182139823[425] = 0;
   out_3110784210182139823[426] = 0;
   out_3110784210182139823[427] = 0;
   out_3110784210182139823[428] = 0;
   out_3110784210182139823[429] = 0;
   out_3110784210182139823[430] = 0;
   out_3110784210182139823[431] = 0;
   out_3110784210182139823[432] = 0;
   out_3110784210182139823[433] = 0;
   out_3110784210182139823[434] = 0;
   out_3110784210182139823[435] = 0;
   out_3110784210182139823[436] = 0;
   out_3110784210182139823[437] = 0;
   out_3110784210182139823[438] = 0;
   out_3110784210182139823[439] = 0;
   out_3110784210182139823[440] = 1;
}
void h_4(double *state, double *unused, double *out_5455036878310112758) {
   out_5455036878310112758[0] = state[10] + state[13];
   out_5455036878310112758[1] = state[11] + state[14];
   out_5455036878310112758[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6466449812818180840) {
   out_6466449812818180840[0] = 0;
   out_6466449812818180840[1] = 0;
   out_6466449812818180840[2] = 0;
   out_6466449812818180840[3] = 0;
   out_6466449812818180840[4] = 0;
   out_6466449812818180840[5] = 0;
   out_6466449812818180840[6] = 0;
   out_6466449812818180840[7] = 0;
   out_6466449812818180840[8] = 0;
   out_6466449812818180840[9] = 0;
   out_6466449812818180840[10] = 1;
   out_6466449812818180840[11] = 0;
   out_6466449812818180840[12] = 0;
   out_6466449812818180840[13] = 1;
   out_6466449812818180840[14] = 0;
   out_6466449812818180840[15] = 0;
   out_6466449812818180840[16] = 0;
   out_6466449812818180840[17] = 0;
   out_6466449812818180840[18] = 0;
   out_6466449812818180840[19] = 0;
   out_6466449812818180840[20] = 0;
   out_6466449812818180840[21] = 0;
   out_6466449812818180840[22] = 0;
   out_6466449812818180840[23] = 0;
   out_6466449812818180840[24] = 0;
   out_6466449812818180840[25] = 0;
   out_6466449812818180840[26] = 0;
   out_6466449812818180840[27] = 0;
   out_6466449812818180840[28] = 0;
   out_6466449812818180840[29] = 0;
   out_6466449812818180840[30] = 0;
   out_6466449812818180840[31] = 0;
   out_6466449812818180840[32] = 0;
   out_6466449812818180840[33] = 1;
   out_6466449812818180840[34] = 0;
   out_6466449812818180840[35] = 0;
   out_6466449812818180840[36] = 1;
   out_6466449812818180840[37] = 0;
   out_6466449812818180840[38] = 0;
   out_6466449812818180840[39] = 0;
   out_6466449812818180840[40] = 0;
   out_6466449812818180840[41] = 0;
   out_6466449812818180840[42] = 0;
   out_6466449812818180840[43] = 0;
   out_6466449812818180840[44] = 0;
   out_6466449812818180840[45] = 0;
   out_6466449812818180840[46] = 0;
   out_6466449812818180840[47] = 0;
   out_6466449812818180840[48] = 0;
   out_6466449812818180840[49] = 0;
   out_6466449812818180840[50] = 0;
   out_6466449812818180840[51] = 0;
   out_6466449812818180840[52] = 0;
   out_6466449812818180840[53] = 0;
   out_6466449812818180840[54] = 0;
   out_6466449812818180840[55] = 0;
   out_6466449812818180840[56] = 1;
   out_6466449812818180840[57] = 0;
   out_6466449812818180840[58] = 0;
   out_6466449812818180840[59] = 1;
   out_6466449812818180840[60] = 0;
   out_6466449812818180840[61] = 0;
   out_6466449812818180840[62] = 0;
   out_6466449812818180840[63] = 0;
   out_6466449812818180840[64] = 0;
   out_6466449812818180840[65] = 0;
}
void h_9(double *state, double *unused, double *out_6269562564067507020) {
   out_6269562564067507020[0] = state[10];
   out_6269562564067507020[1] = state[11];
   out_6269562564067507020[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6707639459447771485) {
   out_6707639459447771485[0] = 0;
   out_6707639459447771485[1] = 0;
   out_6707639459447771485[2] = 0;
   out_6707639459447771485[3] = 0;
   out_6707639459447771485[4] = 0;
   out_6707639459447771485[5] = 0;
   out_6707639459447771485[6] = 0;
   out_6707639459447771485[7] = 0;
   out_6707639459447771485[8] = 0;
   out_6707639459447771485[9] = 0;
   out_6707639459447771485[10] = 1;
   out_6707639459447771485[11] = 0;
   out_6707639459447771485[12] = 0;
   out_6707639459447771485[13] = 0;
   out_6707639459447771485[14] = 0;
   out_6707639459447771485[15] = 0;
   out_6707639459447771485[16] = 0;
   out_6707639459447771485[17] = 0;
   out_6707639459447771485[18] = 0;
   out_6707639459447771485[19] = 0;
   out_6707639459447771485[20] = 0;
   out_6707639459447771485[21] = 0;
   out_6707639459447771485[22] = 0;
   out_6707639459447771485[23] = 0;
   out_6707639459447771485[24] = 0;
   out_6707639459447771485[25] = 0;
   out_6707639459447771485[26] = 0;
   out_6707639459447771485[27] = 0;
   out_6707639459447771485[28] = 0;
   out_6707639459447771485[29] = 0;
   out_6707639459447771485[30] = 0;
   out_6707639459447771485[31] = 0;
   out_6707639459447771485[32] = 0;
   out_6707639459447771485[33] = 1;
   out_6707639459447771485[34] = 0;
   out_6707639459447771485[35] = 0;
   out_6707639459447771485[36] = 0;
   out_6707639459447771485[37] = 0;
   out_6707639459447771485[38] = 0;
   out_6707639459447771485[39] = 0;
   out_6707639459447771485[40] = 0;
   out_6707639459447771485[41] = 0;
   out_6707639459447771485[42] = 0;
   out_6707639459447771485[43] = 0;
   out_6707639459447771485[44] = 0;
   out_6707639459447771485[45] = 0;
   out_6707639459447771485[46] = 0;
   out_6707639459447771485[47] = 0;
   out_6707639459447771485[48] = 0;
   out_6707639459447771485[49] = 0;
   out_6707639459447771485[50] = 0;
   out_6707639459447771485[51] = 0;
   out_6707639459447771485[52] = 0;
   out_6707639459447771485[53] = 0;
   out_6707639459447771485[54] = 0;
   out_6707639459447771485[55] = 0;
   out_6707639459447771485[56] = 1;
   out_6707639459447771485[57] = 0;
   out_6707639459447771485[58] = 0;
   out_6707639459447771485[59] = 0;
   out_6707639459447771485[60] = 0;
   out_6707639459447771485[61] = 0;
   out_6707639459447771485[62] = 0;
   out_6707639459447771485[63] = 0;
   out_6707639459447771485[64] = 0;
   out_6707639459447771485[65] = 0;
}
void h_10(double *state, double *unused, double *out_397430240853300482) {
   out_397430240853300482[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_397430240853300482[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_397430240853300482[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_482438985351938964) {
   out_482438985351938964[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_482438985351938964[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_482438985351938964[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_482438985351938964[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_482438985351938964[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_482438985351938964[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_482438985351938964[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_482438985351938964[7] = 0;
   out_482438985351938964[8] = 0;
   out_482438985351938964[9] = 0;
   out_482438985351938964[10] = 0;
   out_482438985351938964[11] = 0;
   out_482438985351938964[12] = 0;
   out_482438985351938964[13] = 0;
   out_482438985351938964[14] = 0;
   out_482438985351938964[15] = 0;
   out_482438985351938964[16] = 1;
   out_482438985351938964[17] = 0;
   out_482438985351938964[18] = 0;
   out_482438985351938964[19] = 1;
   out_482438985351938964[20] = 0;
   out_482438985351938964[21] = 0;
   out_482438985351938964[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_482438985351938964[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_482438985351938964[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_482438985351938964[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_482438985351938964[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_482438985351938964[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_482438985351938964[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_482438985351938964[29] = 0;
   out_482438985351938964[30] = 0;
   out_482438985351938964[31] = 0;
   out_482438985351938964[32] = 0;
   out_482438985351938964[33] = 0;
   out_482438985351938964[34] = 0;
   out_482438985351938964[35] = 0;
   out_482438985351938964[36] = 0;
   out_482438985351938964[37] = 0;
   out_482438985351938964[38] = 0;
   out_482438985351938964[39] = 1;
   out_482438985351938964[40] = 0;
   out_482438985351938964[41] = 0;
   out_482438985351938964[42] = 1;
   out_482438985351938964[43] = 0;
   out_482438985351938964[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_482438985351938964[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_482438985351938964[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_482438985351938964[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_482438985351938964[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_482438985351938964[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_482438985351938964[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_482438985351938964[51] = 0;
   out_482438985351938964[52] = 0;
   out_482438985351938964[53] = 0;
   out_482438985351938964[54] = 0;
   out_482438985351938964[55] = 0;
   out_482438985351938964[56] = 0;
   out_482438985351938964[57] = 0;
   out_482438985351938964[58] = 0;
   out_482438985351938964[59] = 0;
   out_482438985351938964[60] = 0;
   out_482438985351938964[61] = 0;
   out_482438985351938964[62] = 1;
   out_482438985351938964[63] = 0;
   out_482438985351938964[64] = 0;
   out_482438985351938964[65] = 1;
}
void h_12(double *state, double *unused, double *out_1899457965329291003) {
   out_1899457965329291003[0] = state[0];
   out_1899457965329291003[1] = state[1];
   out_1899457965329291003[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6960837852859408981) {
   out_6960837852859408981[0] = 1;
   out_6960837852859408981[1] = 0;
   out_6960837852859408981[2] = 0;
   out_6960837852859408981[3] = 0;
   out_6960837852859408981[4] = 0;
   out_6960837852859408981[5] = 0;
   out_6960837852859408981[6] = 0;
   out_6960837852859408981[7] = 0;
   out_6960837852859408981[8] = 0;
   out_6960837852859408981[9] = 0;
   out_6960837852859408981[10] = 0;
   out_6960837852859408981[11] = 0;
   out_6960837852859408981[12] = 0;
   out_6960837852859408981[13] = 0;
   out_6960837852859408981[14] = 0;
   out_6960837852859408981[15] = 0;
   out_6960837852859408981[16] = 0;
   out_6960837852859408981[17] = 0;
   out_6960837852859408981[18] = 0;
   out_6960837852859408981[19] = 0;
   out_6960837852859408981[20] = 0;
   out_6960837852859408981[21] = 0;
   out_6960837852859408981[22] = 0;
   out_6960837852859408981[23] = 1;
   out_6960837852859408981[24] = 0;
   out_6960837852859408981[25] = 0;
   out_6960837852859408981[26] = 0;
   out_6960837852859408981[27] = 0;
   out_6960837852859408981[28] = 0;
   out_6960837852859408981[29] = 0;
   out_6960837852859408981[30] = 0;
   out_6960837852859408981[31] = 0;
   out_6960837852859408981[32] = 0;
   out_6960837852859408981[33] = 0;
   out_6960837852859408981[34] = 0;
   out_6960837852859408981[35] = 0;
   out_6960837852859408981[36] = 0;
   out_6960837852859408981[37] = 0;
   out_6960837852859408981[38] = 0;
   out_6960837852859408981[39] = 0;
   out_6960837852859408981[40] = 0;
   out_6960837852859408981[41] = 0;
   out_6960837852859408981[42] = 0;
   out_6960837852859408981[43] = 0;
   out_6960837852859408981[44] = 0;
   out_6960837852859408981[45] = 0;
   out_6960837852859408981[46] = 1;
   out_6960837852859408981[47] = 0;
   out_6960837852859408981[48] = 0;
   out_6960837852859408981[49] = 0;
   out_6960837852859408981[50] = 0;
   out_6960837852859408981[51] = 0;
   out_6960837852859408981[52] = 0;
   out_6960837852859408981[53] = 0;
   out_6960837852859408981[54] = 0;
   out_6960837852859408981[55] = 0;
   out_6960837852859408981[56] = 0;
   out_6960837852859408981[57] = 0;
   out_6960837852859408981[58] = 0;
   out_6960837852859408981[59] = 0;
   out_6960837852859408981[60] = 0;
   out_6960837852859408981[61] = 0;
   out_6960837852859408981[62] = 0;
   out_6960837852859408981[63] = 0;
   out_6960837852859408981[64] = 0;
   out_6960837852859408981[65] = 0;
}
void h_31(double *state, double *unused, double *out_5156545870200553513) {
   out_5156545870200553513[0] = state[7];
   out_5156545870200553513[1] = state[8];
   out_5156545870200553513[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8613632203518763400) {
   out_8613632203518763400[0] = 0;
   out_8613632203518763400[1] = 0;
   out_8613632203518763400[2] = 0;
   out_8613632203518763400[3] = 0;
   out_8613632203518763400[4] = 0;
   out_8613632203518763400[5] = 0;
   out_8613632203518763400[6] = 0;
   out_8613632203518763400[7] = 1;
   out_8613632203518763400[8] = 0;
   out_8613632203518763400[9] = 0;
   out_8613632203518763400[10] = 0;
   out_8613632203518763400[11] = 0;
   out_8613632203518763400[12] = 0;
   out_8613632203518763400[13] = 0;
   out_8613632203518763400[14] = 0;
   out_8613632203518763400[15] = 0;
   out_8613632203518763400[16] = 0;
   out_8613632203518763400[17] = 0;
   out_8613632203518763400[18] = 0;
   out_8613632203518763400[19] = 0;
   out_8613632203518763400[20] = 0;
   out_8613632203518763400[21] = 0;
   out_8613632203518763400[22] = 0;
   out_8613632203518763400[23] = 0;
   out_8613632203518763400[24] = 0;
   out_8613632203518763400[25] = 0;
   out_8613632203518763400[26] = 0;
   out_8613632203518763400[27] = 0;
   out_8613632203518763400[28] = 0;
   out_8613632203518763400[29] = 0;
   out_8613632203518763400[30] = 1;
   out_8613632203518763400[31] = 0;
   out_8613632203518763400[32] = 0;
   out_8613632203518763400[33] = 0;
   out_8613632203518763400[34] = 0;
   out_8613632203518763400[35] = 0;
   out_8613632203518763400[36] = 0;
   out_8613632203518763400[37] = 0;
   out_8613632203518763400[38] = 0;
   out_8613632203518763400[39] = 0;
   out_8613632203518763400[40] = 0;
   out_8613632203518763400[41] = 0;
   out_8613632203518763400[42] = 0;
   out_8613632203518763400[43] = 0;
   out_8613632203518763400[44] = 0;
   out_8613632203518763400[45] = 0;
   out_8613632203518763400[46] = 0;
   out_8613632203518763400[47] = 0;
   out_8613632203518763400[48] = 0;
   out_8613632203518763400[49] = 0;
   out_8613632203518763400[50] = 0;
   out_8613632203518763400[51] = 0;
   out_8613632203518763400[52] = 0;
   out_8613632203518763400[53] = 1;
   out_8613632203518763400[54] = 0;
   out_8613632203518763400[55] = 0;
   out_8613632203518763400[56] = 0;
   out_8613632203518763400[57] = 0;
   out_8613632203518763400[58] = 0;
   out_8613632203518763400[59] = 0;
   out_8613632203518763400[60] = 0;
   out_8613632203518763400[61] = 0;
   out_8613632203518763400[62] = 0;
   out_8613632203518763400[63] = 0;
   out_8613632203518763400[64] = 0;
   out_8613632203518763400[65] = 0;
}
void h_32(double *state, double *unused, double *out_6608677393623002943) {
   out_6608677393623002943[0] = state[3];
   out_6608677393623002943[1] = state[4];
   out_6608677393623002943[2] = state[5];
   out_6608677393623002943[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1431616656115977679) {
   out_1431616656115977679[0] = 0;
   out_1431616656115977679[1] = 0;
   out_1431616656115977679[2] = 0;
   out_1431616656115977679[3] = 1;
   out_1431616656115977679[4] = 0;
   out_1431616656115977679[5] = 0;
   out_1431616656115977679[6] = 0;
   out_1431616656115977679[7] = 0;
   out_1431616656115977679[8] = 0;
   out_1431616656115977679[9] = 0;
   out_1431616656115977679[10] = 0;
   out_1431616656115977679[11] = 0;
   out_1431616656115977679[12] = 0;
   out_1431616656115977679[13] = 0;
   out_1431616656115977679[14] = 0;
   out_1431616656115977679[15] = 0;
   out_1431616656115977679[16] = 0;
   out_1431616656115977679[17] = 0;
   out_1431616656115977679[18] = 0;
   out_1431616656115977679[19] = 0;
   out_1431616656115977679[20] = 0;
   out_1431616656115977679[21] = 0;
   out_1431616656115977679[22] = 0;
   out_1431616656115977679[23] = 0;
   out_1431616656115977679[24] = 0;
   out_1431616656115977679[25] = 0;
   out_1431616656115977679[26] = 1;
   out_1431616656115977679[27] = 0;
   out_1431616656115977679[28] = 0;
   out_1431616656115977679[29] = 0;
   out_1431616656115977679[30] = 0;
   out_1431616656115977679[31] = 0;
   out_1431616656115977679[32] = 0;
   out_1431616656115977679[33] = 0;
   out_1431616656115977679[34] = 0;
   out_1431616656115977679[35] = 0;
   out_1431616656115977679[36] = 0;
   out_1431616656115977679[37] = 0;
   out_1431616656115977679[38] = 0;
   out_1431616656115977679[39] = 0;
   out_1431616656115977679[40] = 0;
   out_1431616656115977679[41] = 0;
   out_1431616656115977679[42] = 0;
   out_1431616656115977679[43] = 0;
   out_1431616656115977679[44] = 0;
   out_1431616656115977679[45] = 0;
   out_1431616656115977679[46] = 0;
   out_1431616656115977679[47] = 0;
   out_1431616656115977679[48] = 0;
   out_1431616656115977679[49] = 1;
   out_1431616656115977679[50] = 0;
   out_1431616656115977679[51] = 0;
   out_1431616656115977679[52] = 0;
   out_1431616656115977679[53] = 0;
   out_1431616656115977679[54] = 0;
   out_1431616656115977679[55] = 0;
   out_1431616656115977679[56] = 0;
   out_1431616656115977679[57] = 0;
   out_1431616656115977679[58] = 0;
   out_1431616656115977679[59] = 0;
   out_1431616656115977679[60] = 0;
   out_1431616656115977679[61] = 0;
   out_1431616656115977679[62] = 0;
   out_1431616656115977679[63] = 0;
   out_1431616656115977679[64] = 0;
   out_1431616656115977679[65] = 0;
   out_1431616656115977679[66] = 0;
   out_1431616656115977679[67] = 0;
   out_1431616656115977679[68] = 0;
   out_1431616656115977679[69] = 0;
   out_1431616656115977679[70] = 0;
   out_1431616656115977679[71] = 0;
   out_1431616656115977679[72] = 1;
   out_1431616656115977679[73] = 0;
   out_1431616656115977679[74] = 0;
   out_1431616656115977679[75] = 0;
   out_1431616656115977679[76] = 0;
   out_1431616656115977679[77] = 0;
   out_1431616656115977679[78] = 0;
   out_1431616656115977679[79] = 0;
   out_1431616656115977679[80] = 0;
   out_1431616656115977679[81] = 0;
   out_1431616656115977679[82] = 0;
   out_1431616656115977679[83] = 0;
   out_1431616656115977679[84] = 0;
   out_1431616656115977679[85] = 0;
   out_1431616656115977679[86] = 0;
   out_1431616656115977679[87] = 0;
}
void h_13(double *state, double *unused, double *out_7424891219692984509) {
   out_7424891219692984509[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7424891219692984509[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7424891219692984509[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5477107673330009735) {
   out_5477107673330009735[0] = 0;
   out_5477107673330009735[1] = 0;
   out_5477107673330009735[2] = 0;
   out_5477107673330009735[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5477107673330009735[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5477107673330009735[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5477107673330009735[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5477107673330009735[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5477107673330009735[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5477107673330009735[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5477107673330009735[10] = 0;
   out_5477107673330009735[11] = 0;
   out_5477107673330009735[12] = 0;
   out_5477107673330009735[13] = 0;
   out_5477107673330009735[14] = 0;
   out_5477107673330009735[15] = 0;
   out_5477107673330009735[16] = 0;
   out_5477107673330009735[17] = 0;
   out_5477107673330009735[18] = 0;
   out_5477107673330009735[19] = 0;
   out_5477107673330009735[20] = 0;
   out_5477107673330009735[21] = 0;
   out_5477107673330009735[22] = 0;
   out_5477107673330009735[23] = 0;
   out_5477107673330009735[24] = 0;
   out_5477107673330009735[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5477107673330009735[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5477107673330009735[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5477107673330009735[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5477107673330009735[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5477107673330009735[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5477107673330009735[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5477107673330009735[32] = 0;
   out_5477107673330009735[33] = 0;
   out_5477107673330009735[34] = 0;
   out_5477107673330009735[35] = 0;
   out_5477107673330009735[36] = 0;
   out_5477107673330009735[37] = 0;
   out_5477107673330009735[38] = 0;
   out_5477107673330009735[39] = 0;
   out_5477107673330009735[40] = 0;
   out_5477107673330009735[41] = 0;
   out_5477107673330009735[42] = 0;
   out_5477107673330009735[43] = 0;
   out_5477107673330009735[44] = 0;
   out_5477107673330009735[45] = 0;
   out_5477107673330009735[46] = 0;
   out_5477107673330009735[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5477107673330009735[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5477107673330009735[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5477107673330009735[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5477107673330009735[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5477107673330009735[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5477107673330009735[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5477107673330009735[54] = 0;
   out_5477107673330009735[55] = 0;
   out_5477107673330009735[56] = 0;
   out_5477107673330009735[57] = 0;
   out_5477107673330009735[58] = 0;
   out_5477107673330009735[59] = 0;
   out_5477107673330009735[60] = 0;
   out_5477107673330009735[61] = 0;
   out_5477107673330009735[62] = 0;
   out_5477107673330009735[63] = 0;
   out_5477107673330009735[64] = 0;
   out_5477107673330009735[65] = 0;
}
void h_14(double *state, double *unused, double *out_6269562564067507020) {
   out_6269562564067507020[0] = state[10];
   out_6269562564067507020[1] = state[11];
   out_6269562564067507020[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6707639459447771485) {
   out_6707639459447771485[0] = 0;
   out_6707639459447771485[1] = 0;
   out_6707639459447771485[2] = 0;
   out_6707639459447771485[3] = 0;
   out_6707639459447771485[4] = 0;
   out_6707639459447771485[5] = 0;
   out_6707639459447771485[6] = 0;
   out_6707639459447771485[7] = 0;
   out_6707639459447771485[8] = 0;
   out_6707639459447771485[9] = 0;
   out_6707639459447771485[10] = 1;
   out_6707639459447771485[11] = 0;
   out_6707639459447771485[12] = 0;
   out_6707639459447771485[13] = 0;
   out_6707639459447771485[14] = 0;
   out_6707639459447771485[15] = 0;
   out_6707639459447771485[16] = 0;
   out_6707639459447771485[17] = 0;
   out_6707639459447771485[18] = 0;
   out_6707639459447771485[19] = 0;
   out_6707639459447771485[20] = 0;
   out_6707639459447771485[21] = 0;
   out_6707639459447771485[22] = 0;
   out_6707639459447771485[23] = 0;
   out_6707639459447771485[24] = 0;
   out_6707639459447771485[25] = 0;
   out_6707639459447771485[26] = 0;
   out_6707639459447771485[27] = 0;
   out_6707639459447771485[28] = 0;
   out_6707639459447771485[29] = 0;
   out_6707639459447771485[30] = 0;
   out_6707639459447771485[31] = 0;
   out_6707639459447771485[32] = 0;
   out_6707639459447771485[33] = 1;
   out_6707639459447771485[34] = 0;
   out_6707639459447771485[35] = 0;
   out_6707639459447771485[36] = 0;
   out_6707639459447771485[37] = 0;
   out_6707639459447771485[38] = 0;
   out_6707639459447771485[39] = 0;
   out_6707639459447771485[40] = 0;
   out_6707639459447771485[41] = 0;
   out_6707639459447771485[42] = 0;
   out_6707639459447771485[43] = 0;
   out_6707639459447771485[44] = 0;
   out_6707639459447771485[45] = 0;
   out_6707639459447771485[46] = 0;
   out_6707639459447771485[47] = 0;
   out_6707639459447771485[48] = 0;
   out_6707639459447771485[49] = 0;
   out_6707639459447771485[50] = 0;
   out_6707639459447771485[51] = 0;
   out_6707639459447771485[52] = 0;
   out_6707639459447771485[53] = 0;
   out_6707639459447771485[54] = 0;
   out_6707639459447771485[55] = 0;
   out_6707639459447771485[56] = 1;
   out_6707639459447771485[57] = 0;
   out_6707639459447771485[58] = 0;
   out_6707639459447771485[59] = 0;
   out_6707639459447771485[60] = 0;
   out_6707639459447771485[61] = 0;
   out_6707639459447771485[62] = 0;
   out_6707639459447771485[63] = 0;
   out_6707639459447771485[64] = 0;
   out_6707639459447771485[65] = 0;
}
void h_33(double *state, double *unused, double *out_2587611344856094368) {
   out_2587611344856094368[0] = state[16];
   out_2587611344856094368[1] = state[17];
   out_2587611344856094368[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5463075198879905796) {
   out_5463075198879905796[0] = 0;
   out_5463075198879905796[1] = 0;
   out_5463075198879905796[2] = 0;
   out_5463075198879905796[3] = 0;
   out_5463075198879905796[4] = 0;
   out_5463075198879905796[5] = 0;
   out_5463075198879905796[6] = 0;
   out_5463075198879905796[7] = 0;
   out_5463075198879905796[8] = 0;
   out_5463075198879905796[9] = 0;
   out_5463075198879905796[10] = 0;
   out_5463075198879905796[11] = 0;
   out_5463075198879905796[12] = 0;
   out_5463075198879905796[13] = 0;
   out_5463075198879905796[14] = 0;
   out_5463075198879905796[15] = 0;
   out_5463075198879905796[16] = 1;
   out_5463075198879905796[17] = 0;
   out_5463075198879905796[18] = 0;
   out_5463075198879905796[19] = 0;
   out_5463075198879905796[20] = 0;
   out_5463075198879905796[21] = 0;
   out_5463075198879905796[22] = 0;
   out_5463075198879905796[23] = 0;
   out_5463075198879905796[24] = 0;
   out_5463075198879905796[25] = 0;
   out_5463075198879905796[26] = 0;
   out_5463075198879905796[27] = 0;
   out_5463075198879905796[28] = 0;
   out_5463075198879905796[29] = 0;
   out_5463075198879905796[30] = 0;
   out_5463075198879905796[31] = 0;
   out_5463075198879905796[32] = 0;
   out_5463075198879905796[33] = 0;
   out_5463075198879905796[34] = 0;
   out_5463075198879905796[35] = 0;
   out_5463075198879905796[36] = 0;
   out_5463075198879905796[37] = 0;
   out_5463075198879905796[38] = 0;
   out_5463075198879905796[39] = 1;
   out_5463075198879905796[40] = 0;
   out_5463075198879905796[41] = 0;
   out_5463075198879905796[42] = 0;
   out_5463075198879905796[43] = 0;
   out_5463075198879905796[44] = 0;
   out_5463075198879905796[45] = 0;
   out_5463075198879905796[46] = 0;
   out_5463075198879905796[47] = 0;
   out_5463075198879905796[48] = 0;
   out_5463075198879905796[49] = 0;
   out_5463075198879905796[50] = 0;
   out_5463075198879905796[51] = 0;
   out_5463075198879905796[52] = 0;
   out_5463075198879905796[53] = 0;
   out_5463075198879905796[54] = 0;
   out_5463075198879905796[55] = 0;
   out_5463075198879905796[56] = 0;
   out_5463075198879905796[57] = 0;
   out_5463075198879905796[58] = 0;
   out_5463075198879905796[59] = 0;
   out_5463075198879905796[60] = 0;
   out_5463075198879905796[61] = 0;
   out_5463075198879905796[62] = 1;
   out_5463075198879905796[63] = 0;
   out_5463075198879905796[64] = 0;
   out_5463075198879905796[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4025156105647969873) {
  H(in_vec, out_4025156105647969873);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4971862151210719925) {
  err_fun(nom_x, delta_x, out_4971862151210719925);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1175449850909647023) {
  inv_err_fun(nom_x, true_x, out_1175449850909647023);
}
void live_H_mod_fun(double *state, double *out_2742273176947733560) {
  H_mod_fun(state, out_2742273176947733560);
}
void live_f_fun(double *state, double dt, double *out_334090933826292600) {
  f_fun(state,  dt, out_334090933826292600);
}
void live_F_fun(double *state, double dt, double *out_3110784210182139823) {
  F_fun(state,  dt, out_3110784210182139823);
}
void live_h_4(double *state, double *unused, double *out_5455036878310112758) {
  h_4(state, unused, out_5455036878310112758);
}
void live_H_4(double *state, double *unused, double *out_6466449812818180840) {
  H_4(state, unused, out_6466449812818180840);
}
void live_h_9(double *state, double *unused, double *out_6269562564067507020) {
  h_9(state, unused, out_6269562564067507020);
}
void live_H_9(double *state, double *unused, double *out_6707639459447771485) {
  H_9(state, unused, out_6707639459447771485);
}
void live_h_10(double *state, double *unused, double *out_397430240853300482) {
  h_10(state, unused, out_397430240853300482);
}
void live_H_10(double *state, double *unused, double *out_482438985351938964) {
  H_10(state, unused, out_482438985351938964);
}
void live_h_12(double *state, double *unused, double *out_1899457965329291003) {
  h_12(state, unused, out_1899457965329291003);
}
void live_H_12(double *state, double *unused, double *out_6960837852859408981) {
  H_12(state, unused, out_6960837852859408981);
}
void live_h_31(double *state, double *unused, double *out_5156545870200553513) {
  h_31(state, unused, out_5156545870200553513);
}
void live_H_31(double *state, double *unused, double *out_8613632203518763400) {
  H_31(state, unused, out_8613632203518763400);
}
void live_h_32(double *state, double *unused, double *out_6608677393623002943) {
  h_32(state, unused, out_6608677393623002943);
}
void live_H_32(double *state, double *unused, double *out_1431616656115977679) {
  H_32(state, unused, out_1431616656115977679);
}
void live_h_13(double *state, double *unused, double *out_7424891219692984509) {
  h_13(state, unused, out_7424891219692984509);
}
void live_H_13(double *state, double *unused, double *out_5477107673330009735) {
  H_13(state, unused, out_5477107673330009735);
}
void live_h_14(double *state, double *unused, double *out_6269562564067507020) {
  h_14(state, unused, out_6269562564067507020);
}
void live_H_14(double *state, double *unused, double *out_6707639459447771485) {
  H_14(state, unused, out_6707639459447771485);
}
void live_h_33(double *state, double *unused, double *out_2587611344856094368) {
  h_33(state, unused, out_2587611344856094368);
}
void live_H_33(double *state, double *unused, double *out_5463075198879905796) {
  H_33(state, unused, out_5463075198879905796);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
